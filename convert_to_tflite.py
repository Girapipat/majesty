import tensorflow as tf

# ------------------------
# CONFIG
# ------------------------
models = [
    ("classifier_model.h5", "classifier_model.tflite"),
    ("regression_model.h5", "regression_model.tflite")
]

# ------------------------
# CONVERT
# ------------------------
for h5_path, tflite_path in models:
    try:
        print(f"üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• {h5_path} ...")
        model = tf.keras.models.load_model(h5_path)

        print(f"‚û°Ô∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏õ‡∏•‡∏á {h5_path} ‡πÄ‡∏õ‡πá‡∏ô {tflite_path} ...")
        converter = tf.lite.TFLiteConverter.from_keras_model(model)

        # Optional: ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£ optimize (‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß)
        converter.optimizations = [tf.lite.Optimize.DEFAULT]

        # ‡πÅ‡∏õ‡∏•‡∏á
        tflite_model = converter.convert()

        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
        with open(tflite_path, "wb") as f:
            f.write(tflite_model)

        print(f"‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {tflite_path}")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö {h5_path}: {e}")
